coref(target_pronoun, Y) :- property(P, target_pronoun), property(P, Y), Y != target_pronoun.
coref(target_pronoun, Y) :- event_subject(E, target_pronoun), event_subject(E, Y), Y != target_pronoun.
coref(target_pronoun, Y) :- event_object(E, target_pronoun), event_object(E, Y), Y != target_pronoun.event(lift, lift_1).
event_subject(lift_1, the_man).
event_object(lift_1, son).
mod(neg, lift_1).
property(heavy, target_pronoun).
property(heavy, V1) :- event_object(V0, V1), mod(neg, V0).


coref(target_pronoun, Y) :- property(P, target_pronoun), property(P, Y), Y != target_pronoun.
coref(target_pronoun, Y) :- event_subject(E, target_pronoun), event_subject(E, Y), Y != target_pronoun.
coref(target_pronoun, Y) :- event_object(E, target_pronoun), event_object(E, Y), Y != target_pronoun.
#modeh(property(heavy, var(entity))).
#modeb(1, event(lift, var(event)), (anti_reflexive)).
#modeb(1, event_object(var(event), var(entity)), (anti_reflexive)).
#modeb(1, event_related(var(entity_event), var(event)), (anti_reflexive)).
#modeb(2, event_subject(var(entity_event), var(entity)), (anti_reflexive)).
#modeb(2, event_subject(var(event), var(entity)), (anti_reflexive)).
#modeb(1, event_related(var(entity_event), var(entity_event)), (anti_reflexive)).
#modeb(1, event(lift, var(entity_event)), (anti_reflexive)).
#modeb(1, property(heavy, var(entity)), (anti_reflexive)).
#modeb(1, property(so, var(entity)), (anti_reflexive)).
#modeb(1, event(decide, var(entity_event)), (anti_reflexive)).
#modeb(1, event_object(var(entity_event), var(entity)), (anti_reflexive)).
#modeb(1, mod(neg, var(event)), (anti_reflexive)).
#bias("no_constraint.").
#pos(p0, {coref(target_pronoun, dumbbell)}, {}, {event_related(decide, lift_3). event_subject(lift_2, he). mod(neg, lift_2). event(decide, decide_1). event_subject(decide_1, he). event(lift, lift_3). property(heavy, target_pronoun). property(so, he). event_object(lift_2, dumbbell). event_subject(lift_3, he). event_related(decide, lift_2). event_subject(lift_2, james). event(lift, lift_2). event_object(lift_3, barbell). entity(dumbbell). entity_event(lift_3). event(lift_2). entity_event(decide). entity(he). entity(james). entity_event(lift_2). entity(barbell). entity(target_pronoun). entity_event(decide_1).}).
#neg(n0, {coref(target_pronoun, barbell)}, {}, {event_related(decide, lift_3). event_subject(lift_2, he). mod(neg, lift_2). event(decide, decide_1). event_subject(decide_1, he). event(lift, lift_3). property(heavy, target_pronoun). property(so, he). event_object(lift_2, dumbbell). event_subject(lift_3, he). event_related(decide, lift_2). event_subject(lift_2, james). event(lift, lift_2). event_object(lift_3, barbell). entity(dumbbell). entity_event(lift_3). event(lift_2). entity_event(decide). entity(he). entity(james). entity_event(lift_2). entity(barbell). entity(target_pronoun). entity_event(decide_1).}).

## Without using event ids
coref(target_pronoun, Y) :- property(P, target_pronoun), property(P, Y), Y != target_pronoun.
coref(target_pronoun, Y) :- event_subject(E, target_pronoun), event_subject(E, Y), Y != target_pronoun.
coref(target_pronoun, Y) :- event_object(E, target_pronoun), event_object(E, Y), Y != target_pronoun.event(lift, lift).
event_subject(lift, the_man).
event_object(lift, son).
mod(neg, lift).
property(heavy, target_pronoun).
property(heavy, V0) :- event_object(lift, V0).

coref(target_pronoun, Y) :- property(P, target_pronoun), property(P, Y), Y != target_pronoun.
coref(target_pronoun, Y) :- event_subject(E, target_pronoun), event_subject(E, Y), Y != target_pronoun.
coref(target_pronoun, Y) :- event_object(E, target_pronoun), event_object(E, Y), Y != target_pronoun.
#modeh(property(heavy, var(entity))).
#modeb(1, property(cradle, var(entity)), (anti_reflexive)).
#modeb(1, event_object(lift, var(entity)), (anti_reflexive)).
#modeb(1, event_subject(lift, var(entity)), (anti_reflexive)).
#bias("no_constraint.").
#modeb(1, event(lift, var(event)), (anti_reflexive)).
#modeb(1, property(heavy, var(entity)), (anti_reflexive)).
#modeb(1, mod(neg, var(event)), (anti_reflexive)).
#pos(p0, {coref(target_pronoun, felicia)}, {}, {property(heavy, target_pronoun). event_subject(lift, emily). event(lift, lift). property(cradle, out). event_object(lift, felicia). mod(neg, lift). entity(felicia). event(lift). entity(out). entity(emily). entity_event(lift). entity(target_pronoun).}).
#neg(n0, {coref(target_pronoun, emily)}, {}, {property(heavy, target_pronoun). event_subject(lift, emily). event(lift, lift). property(cradle, out). event_object(lift, felicia). mod(neg, lift). entity(felicia). event(lift). entity(out). entity(emily). entity_event(lift). entity(target_pronoun).}).


# other example
coref(target_pronoun, Y) :- property(P, target_pronoun), property(P, Y), Y != target_pronoun.
coref(target_pronoun, Y) :- event_subject(E, target_pronoun), event_subject(E, Y), Y != target_pronoun.
coref(target_pronoun, Y) :- event_object(E, target_pronoun), event_object(E, Y), Y != target_pronoun.
#modeh(property(upset, var(entity))).
#modeb(1, event_object(comfort, var(entity)), (anti_reflexive)).
#modeb(1, event_subject(comfort, var(entity)), (anti_reflexive)).
#modeb(1, property(stay, var(entity)), (anti_reflexive)).
#modeb(1, property(upset, var(entity)), (anti_reflexive)).
#modeb(1, event(comfort, var(entity_event)), (anti_reflexive)).
#bias("no_constraint.").
#pos(p0, {coref(target_pronoun, aaron)}, {}, {event_object(comfort, aaron). property(upset, target_pronoun). event(comfort, comfort). property(stay, upset). event_subject(comfort, nick). entity(aaron). entity(nick). entity_event(comfort). entity(target_pronoun). entity(upset).}).
#neg(n0, {coref(target_pronoun, nick)}, {}, {event_object(comfort, aaron). property(upset, target_pronoun). event(comfort, comfort). property(stay, upset). event_subject(comfort, nick). entity(aaron). entity(nick). entity_event(comfort). entity(target_pronoun). entity(upset).}).

coref(target_pronoun, Y) :- property(P, target_pronoun), property(P, Y), Y != target_pronoun.
coref(target_pronoun, Y) :- event_subject(E, target_pronoun), event_subject(E, Y), Y != target_pronoun.
coref(target_pronoun, Y) :- event_object(E, target_pronoun), event_object(E, Y), Y != target_pronoun.event(comfort, comfort).
event_subject(comfort, jim).
event_object(comfort, kevin).
property(upset, target_pronoun).
property(upset, V0) :- event_object(comfort, V0).
